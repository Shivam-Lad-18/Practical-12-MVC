@model Task_3.Models.Employee

@{
    ViewBag.Title = "Create Employee";
}

<div class="container mt-4">
    <div class="card shadow-lg">
        <div class="card-header bg-primary text-white">
            <h2 class="mb-0">Create Employee</h2>
        </div>
        <div class="card-body">
            @using (Html.BeginForm("Create", "Employee", FormMethod.Post, new { @class = "needs-validation", novalidate = "true" }))
            {
                @Html.AntiForgeryToken()
                <div class="row">
                    <div class="col-md-6">
                        <div class="mb-3">
                            @Html.LabelFor(model => model.FirstName, new { @class = "form-label fw-bold" })
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>

                        <div class="mb-3">
                            @Html.LabelFor(model => model.MiddleName, new { @class = "form-label fw-bold" })
                            @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
                        </div>

                        <div class="mb-3">
                            @Html.LabelFor(model => model.LastName, new { @class = "form-label fw-bold" })
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>

                        <div class="mb-3">
                            @Html.LabelFor(model => model.Address, new { @class = "form-label fw-bold" })
                            @Html.TextAreaFor(model => model.Address, new { @class = "form-control", rows = 3, required = "required" })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="mb-3">
                            @Html.LabelFor(model => model.DOB, new { @class = "form-label fw-bold" })
                            @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control", type = "date", required = "required" } })
                            @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                        </div>

                        <div class="mb-3">
                            @Html.LabelFor(model => model.MobileNumber, new { @class = "form-label fw-bold" })
                            @Html.EditorFor(model => model.MobileNumber, new { htmlAttributes = new { @class = "form-control", type = "tel", required = "required" } })
                            @Html.ValidationMessageFor(model => model.MobileNumber, "", new { @class = "text-danger" })
                        </div>

                        <div class="mb-3">
                            @Html.LabelFor(model => model.Salary, new { @class = "form-label fw-bold" })
                            @Html.EditorFor(model => model.Salary, new { htmlAttributes = new { @class = "form-control", type = "number", min = "0", required = "required" } })
                            @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })
                        </div>

                        <div class="mb-3">
                            @Html.LabelFor(model => model.DesignationId, new { @class = "form-label fw-bold" })
                            @Html.EditorFor(model => model.DesignationId, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                            @Html.ValidationMessageFor(model => model.DesignationId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="d-flex justify-content-between">
                    <a href="@Url.Action("Index", "Home")" class="btn btn-outline-primary me-2">
                        <i class="bi bi-list"></i> Back to Menu
                    </a>
                    <button type="submit" class="btn btn-success">
                        <i class="bi bi-check-circle"></i> Create
                    </button>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
